//colors
$gun-metal: #7B6D8D;
$lime-green: #87FF0F;
// $dark-blue: #001F75;
$cambridge-blue: #A2C3A4;
$metallic-seaweed: #077187;
$tiffany-blue: #63768D;

@mixin border($border-color) {
	border: 2px solid $border-color;
	border-radius: 5px;
}

@mixin flex($direction) {
	display: flex;
	display: -ms-flexbox;
	display: -webkit-flex;
	@include flex-direction($direction)
}

@mixin vert-align($position) {
	-ms-flex-align: $position;
	-webkit-align-items: $position;
	-webkit-box-align: $position;
	align-items: $position;
}

@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}

@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

//courtesy of Eduardo Boucas @css-tricks
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }
  
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }
  
  @if $fallback {
    font-size: $fallback;
  }
  
  font-size: $responsive;
}

@mixin box-shadow($h-offset, $v-offset, $b-radius, $s-radius, $color) {
  -webkit-box-shadow: $h-offset $v-offset $b-radius $s-radius $color; 
  -moz-box-shadow:    $h-offset $v-offset $b-radius $s-radius $color;
  box-shadow:         $h-offset $v-offset $b-radius $s-radius $color; 
}

@mixin clicking() {
	cursor: pointer;
	&:hover {
		color: $lime-green;
	}
}